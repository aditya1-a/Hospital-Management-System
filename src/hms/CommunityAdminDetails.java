/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hms;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.CityDirectory;
import model.Community;
import model.CommunityDirectory;
import model.DocData;
import model.DoctorDirectory;
import model.EncounterHistory;
import model.HospitalData;
import model.HospitalDirectory;
import model.PatData;
import model.PatientDirectory;

/**
 *
 * @author anupamaditya
 */
public class CommunityAdminDetails extends javax.swing.JFrame {

    /**
     * Creates new form CommunityAdminDetails
     */
    
    DoctorDirectory DocDirectory;
    HospitalDirectory HospDirectory;
    PatientDirectory PatDirectory;
    CityDirectory cityDirectory;
     CommunityDirectory CommDirectory;
      EncounterHistory EncHistory;
    
    
    
    public CommunityAdminDetails() {
        initComponents();
        
        
    }
    
    CommunityAdminDetails(DoctorDirectory DocDirectory, HospitalDirectory HospDirectory, PatientDirectory PatDirectory, CityDirectory cityDirectory,  CommunityDirectory CommDirectory,  EncounterHistory EncHistory) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
         initComponents();

         this.DocDirectory = DocDirectory;
        this.PatDirectory = PatDirectory;
        this.HospDirectory = HospDirectory;
        this.cityDirectory = cityDirectory;
         this.CommDirectory = CommDirectory;
         this.EncHistory = EncHistory;
        this.EncHistory = EncHistory;
        
         populateHospitals();
         
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        JBackAddDoctorButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        JHospitalIDCommCb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        JHospitalNameCommCb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        JCommunityNameCommCb = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        JCityCommCb = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableCommunity = new javax.swing.JTable();
        JSaveAssignHospBtn = new javax.swing.JButton();
        jBtnViewDocDetails = new javax.swing.JButton();
        JCountryCommCb = new javax.swing.JComboBox<>();
        JUpdateDocBtn = new javax.swing.JButton();
        JPincodeCommCb = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Community Details");
        jLabel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 740, 80));

        JBackAddDoctorButton.setBackground(new java.awt.Color(0, 153, 204));
        JBackAddDoctorButton.setIcon(new javax.swing.ImageIcon("/Users/anupamaditya/Downloads/undo-2.png")); // NOI18N
        JBackAddDoctorButton.setText("Back");
        JBackAddDoctorButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        JBackAddDoctorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBackAddDoctorButtonMouseClicked(evt);
            }
        });
        JBackAddDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBackAddDoctorButtonActionPerformed(evt);
            }
        });
        jPanel1.add(JBackAddDoctorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 150, 80));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Hospital ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 80, 30));

        jPanel1.add(JHospitalIDCommCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 150, 30));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Hospital Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 100, 30));

        jPanel1.add(JHospitalNameCommCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 150, 30));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Community Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 120, 30));

        JCommunityNameCommCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCommunityNameCommCbActionPerformed(evt);
            }
        });
        jPanel1.add(JCommunityNameCommCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 150, 30));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("City");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 120, 30));

        jPanel1.add(JCityCommCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 150, 30));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Country");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 120, 30));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Pin Code");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 120, 30));

        JTableCommunity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Hospital ID", "Hospital Name", "Community", "City", "Pincode", "Country"
            }
        ));
        jScrollPane1.setViewportView(JTableCommunity);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 600, 370));

        JSaveAssignHospBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        JSaveAssignHospBtn.setForeground(new java.awt.Color(0, 102, 153));
        JSaveAssignHospBtn.setText("Save");
        JSaveAssignHospBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JSaveAssignHospBtnMouseClicked(evt);
            }
        });
        JSaveAssignHospBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JSaveAssignHospBtnActionPerformed(evt);
            }
        });
        jPanel1.add(JSaveAssignHospBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, 150, 40));

        jBtnViewDocDetails.setBackground(new java.awt.Color(0, 105, 153));
        jBtnViewDocDetails.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jBtnViewDocDetails.setForeground(new java.awt.Color(255, 255, 255));
        jBtnViewDocDetails.setText("View");
        jBtnViewDocDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBtnViewDocDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnViewDocDetailsMouseClicked(evt);
            }
        });
        jPanel1.add(jBtnViewDocDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 520, 110, 40));

        JCountryCommCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USA" }));
        jPanel1.add(JCountryCommCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 150, 30));

        JUpdateDocBtn.setBackground(new java.awt.Color(0, 105, 153));
        JUpdateDocBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        JUpdateDocBtn.setForeground(new java.awt.Color(255, 255, 255));
        JUpdateDocBtn.setText("Update");
        JUpdateDocBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        JUpdateDocBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JUpdateDocBtnMouseClicked(evt);
            }
        });
        jPanel1.add(JUpdateDocBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 520, 100, 40));
        jPanel1.add(JPincodeCommCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 150, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBackAddDoctorButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBackAddDoctorButtonMouseClicked
        // TODO add your handling code here:
        // DoctorDetailsAdmin DDA = new DoctorDetailsAdmin();
        //DDA.setVisible(true);
    }//GEN-LAST:event_JBackAddDoctorButtonMouseClicked

    private void JBackAddDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBackAddDoctorButtonActionPerformed
        // TODO add your handling code here:

        CommunityAdmins CA1 = new CommunityAdmins(DocDirectory, HospDirectory, PatDirectory, cityDirectory, CommDirectory, EncHistory);
        CA1.setVisible(true);
    }//GEN-LAST:event_JBackAddDoctorButtonActionPerformed

    private void JCommunityNameCommCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCommunityNameCommCbActionPerformed
        
    }//GEN-LAST:event_JCommunityNameCommCbActionPerformed

    private void JSaveAssignHospBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JSaveAssignHospBtnMouseClicked
        // TODO add your handling code here:
        
        String hospitalID = JHospitalIDCommCb.getSelectedItem().toString();
        String hospitalName = JHospitalNameCommCb.getSelectedItem().toString();
        String communityName = JCommunityNameCommCb.getSelectedItem().toString();
        String city = JCityCommCb.getSelectedItem().toString();
        String pincode = JPincodeCommCb.getText();
        String country = JCountryCommCb.getSelectedItem().toString();
                
        if (hospitalID.isEmpty() || hospitalName.isEmpty()|| communityName.isEmpty() || city.isEmpty() 
                || pincode.isEmpty()){
            JOptionPane.showMessageDialog(this,
                    "Please enter all fields",
                    "Try Again",
                    JOptionPane.ERROR_MESSAGE);  
            return;
                }
        else{
//        HospitalData HD3 = HospDirectory.addNewHospData();
//        HD3.setHospitalID(hospitalID);
//        HD3.setHospitalName(hospitalName);
        HospitalData HD = HospDirectory.addNewHospData();
        JHospitalIDCommCb.getSelectedItem();
        HD.setHospitalID(hospitalID);
        
        JHospitalNameCommCb.getSelectedItem();
        HD.setHospitalName(hospitalName);
        
        // JCommunityNameCommCb.getSelectedItem();       
        for(Community com : CommDirectory.getCommunities()){
            if(com.getCommunityName().equals(communityName)){
                HD.setCommunity(com);
            }
        }
        
        
        for(City cy : cityDirectory.getCities()){
            if(cy.getCity().equals(city)){
                HD.setCity(cy);
            }
        }
        
        Community hospPincode = new Community();
            hospPincode.setPincode(pincode);
            HD.setPincode(hospPincode);
        
      
        City hospCountry = new City();
           hospCountry.setCountry(country);
           HD.setCountry(hospCountry);
        }
        
        
//     
      
        
           populateTable();       
    }//GEN-LAST:event_JSaveAssignHospBtnMouseClicked

    private void jBtnViewDocDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnViewDocDetailsMouseClicked
        // TODO add your handling code here:

        int selectedRowIndex = JTableCommunity.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select row to delete");
        }

        DefaultTableModel model = (DefaultTableModel) JTableCommunity.getModel();
        HospitalData selectedHosp = (HospitalData) model.getValueAt(selectedRowIndex, 0);

        JHospitalIDCommCb.setSelectedItem(String.valueOf(selectedHosp.getHospitalID()));  //here String.valueof is used to convert any data type like int to String.
        JHospitalIDCommCb.setEditable(false);

        JHospitalNameCommCb.setSelectedItem(String.valueOf(selectedHosp.getHospitalName()));
        JHospitalNameCommCb.setEditable(false);
        
        JCommunityNameCommCb.setSelectedItem(String.valueOf(selectedHosp.getCommunity()));       
        JCityCommCb.setSelectedItem(String.valueOf(selectedHosp.getCity()));      
        JPincodeCommCb.setText(String.valueOf(selectedHosp.getPincode()));        
        JCountryCommCb.setSelectedItem(String.valueOf(selectedHosp.getCountry()));
    }//GEN-LAST:event_jBtnViewDocDetailsMouseClicked

    private void JUpdateDocBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JUpdateDocBtnMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) JTableCommunity.getModel();
        if (JTableCommunity.getSelectedRowCount()==1){

        String hospitalID = JHospitalIDCommCb.getSelectedItem().toString();
        String hospitalName = JHospitalNameCommCb.getSelectedItem().toString();
        String communityName = JCommunityNameCommCb.getSelectedItem().toString();
        String city = JCityCommCb.getSelectedItem().toString();
        String pincode = JPincodeCommCb.getText();
        String country = JCountryCommCb.getSelectedItem().toString();
            
           
            
        model.setValueAt(hospitalID, JTableCommunity.getSelectedRow(),0);
                model.setValueAt(hospitalName, JTableCommunity.getSelectedRow(),1);
                model.setValueAt(communityName, JTableCommunity.getSelectedRow(),2);
                model.setValueAt(city, JTableCommunity.getSelectedRow(),3);
                model.setValueAt(pincode, JTableCommunity.getSelectedRow(),4);
                model.setValueAt(country, JTableCommunity.getSelectedRow(),5);
                

                JOptionPane.showMessageDialog(this, "Update Successfully");
            
        }
        else if (JTableCommunity.getRowCount()==0){
            //if table is empty
            JOptionPane.showMessageDialog(this, "table is empty");
        } else  {
            //if row is not selected or multiple row is selected
            JOptionPane.showMessageDialog(this, "Please select single row for update");

        }

        JHospitalIDCommCb.setSelectedIndex(0);
         JHospitalNameCommCb.setSelectedIndex(0);
        JCommunityNameCommCb.setSelectedIndex(0);
        JCityCommCb.setSelectedIndex(0);
        JPincodeCommCb.setText("");
        JCountryCommCb.setSelectedIndex(0);
   

    }//GEN-LAST:event_JUpdateDocBtnMouseClicked

    private void JSaveAssignHospBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JSaveAssignHospBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JSaveAssignHospBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommunityAdminDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommunityAdminDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommunityAdminDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommunityAdminDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CommunityAdminDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBackAddDoctorButton;
    private javax.swing.JComboBox<String> JCityCommCb;
    private javax.swing.JComboBox<String> JCommunityNameCommCb;
    private javax.swing.JComboBox<String> JCountryCommCb;
    private javax.swing.JComboBox<Object> JHospitalIDCommCb;
    private javax.swing.JComboBox<Object> JHospitalNameCommCb;
    private javax.swing.JTextField JPincodeCommCb;
    private javax.swing.JButton JSaveAssignHospBtn;
    private javax.swing.JTable JTableCommunity;
    private javax.swing.JButton JUpdateDocBtn;
    private javax.swing.JButton jBtnViewDocDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populateHospitals() {
        List<HospitalData> hl = HospDirectory.getHospitalDirectory();
        //List<PatData> pd2 = PatDirectory.getPatDirectory();
        for(HospitalData h : hl){
            JHospitalIDCommCb.addItem(h.getHospitalID());
            JHospitalNameCommCb.addItem(h.getHospitalName());
            ArrayList<City> cl = cityDirectory.getCities();
            for(City c : cl){
                JCityCommCb.addItem(c.getCity());
            }
            ArrayList<Community> cm = CommDirectory.getCommunities();
            for(Community ca : cm){
                JCommunityNameCommCb.addItem(ca.getCommunityName());
            }
        }
//        for(PatData pd3 : pd2){
//            JCommunityNameCommCb.addItem(pd3.getCommunity().getCommunityName());
//            JCityCommCb.addItem(pd3.getCity().getCity());
//            JPincodeCommCb.addItem(pd3.getPincode().getPincode());
//            JCountryCommCb.addItem(pd3.getCountry().getCountry());
//               
//            
//            
//        }
//        for(int i=0;i<pd2.size();i++){
//            JCommunityNameCommCb.addItem(pd2.get(i));
//        }
//            
        
    }  

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) JTableCommunity.getModel();
        model.setRowCount(0);
        
        for(HospitalData hD4 : HospDirectory.getHospitalDirectory()){
            
            Object[] row = new Object[6];
            row[0] =  hD4;
            row[1] =  hD4.getHospitalName();
            row[2] =  hD4.getCommunity();
            row[3] =  hD4.getCity();
            row[4] =  hD4.getPincode();
            row[5] =  hD4.getCountry();
            
              model.addRow(row);
            
    }
   }
}
    

